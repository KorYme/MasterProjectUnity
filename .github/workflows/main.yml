name: Daily Build Action ðŸ˜Ž

on:
  schedule:
    - cron: '0 3 * * *' #Hour of automatic build
  workflow_dispatch:
  push:
    branches:
      - CI_Test

# Secrets to setup
# UNITY_EMAIL => Email of the account to build
# UNITY_PASSWORD => Password of the account to build
# UNITY_LICENSE => Content of the license to build (C:\ProgramData\Unity)
# DISCORD_WEBHOOK_URL => URL of the Discord webhook (without the /github at the end)

# Variables to setup
# UNITY_PROJECT_PATH => Path to Unity Project root starting from repo root (example: MasterProject/)


jobs:
  build:
    name: Build unity project for Windows âœ¨
    runs-on: ubuntu-latest
    outputs:
      build-url: ${{ steps.build-upload.outputs.artifact-url }}
      build-exit-code: ${{ steps.project-build.outputs.engineExitCode }}
    steps:
      - name: Set Start Time
        run: echo "START_TIME=$(TZ=":Europe/Paris" date +'%Y_%m_%d_%H_%M_%S')" >> $GITHUB_ENV
      - name: Debug Time
        run: echo "$START_TIME"

      - name: Checkout repository
        uses: actions/checkout@v4.1.6
        with:
          ref: main # The branch you want the build to be done with
          lfs: false # Whether or not lfs needs to be used to build

      - name: Caching Library Data to speed up process
        uses: actions/cache@v4.0.2
        with:
          path: '${{ vars.UNITY_PROJECT_PATH }}Library' # The path to the Library folder 
          key: Library-${{ hashFiles('${{ unity_project_root }}Assets/**', '${{ unity_project_root }}Packages/**', '${{ unity_project_root }}ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        id: project-build
        uses: game-ci/unity-builder@v4.2.3
        env:
          # Don't forget to setup these secrets in repo settings 
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ vars.UNITY_PROJECT_PATH }}/Assets
          buildName: Build_StandaloneWindows64_${{ env.START_TIME }}
          buildsPath: Builds
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      - name: Upload build as artifact
        id: build-upload
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Build_StandaloneWindows64_${{ env.START_TIME }}
          path: Builds/StandaloneWindows64
          retention-days: 30 #Day before artifact being destroyed

  notify:
    name: Notify Discord with build link
    runs-on: ubuntu-latest
    if: always()
    needs: build
    steps:
      - name: Get Upload Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timezone: UTC+2
          format: 'YYYY-MM-DDTHH:MM:SS.MSSZ'

      - name: Debug Upload Time
        run: echo ${{ steps.time.outputs.time }}

      - name: Notify Discord Success
        if: ${{ needs.build.outputs.build-exit-code }} == 0
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-author-name: AutoBuilder
          embed-author-icon-url: https://cdn-icons-png.flaticon.com/512/25/25231.png
          embed-author-url: https://github.com/KorYme/MasterProject/actions/workflows/main.yml
          embed-title: Nightly Build
          embed-url: https://github.com/KorYme
          embed-description: | 
            The nightly build succeeded
            Download the build [Here](${{ needs.build.outputs.build-url }})
            
            > QAs ! 
            > A VOUS LE DEBUG
          embed-color: 5763719
          embed-footer-text: MasterProject CI
          # embed-timestamp: ${{ steps.time.outputs.time }}
      
      - name: Notify Discord Fail
        if: ${{ needs.build.outputs.build-exit-code }} != 0
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-author-name: AutoBuilder
          embed-author-icon-url: https://cdn-icons-png.flaticon.com/512/25/25231.png
          embed-author-url: https://github.com/KorYme/MasterProject/actions/workflows/main.yml
          embed-title: Nightly Build
          embed-url: https://github.com/KorYme
          embed-image-url: https://img.lemde.fr/2016/08/04/0/0/560/267/664/0/75/0/a9b1471_17806-xsb5q2.jpg
          embed-description: | 
            The build failed !
            
            > This is fine ! 
          embed-color: 15548997
          embed-footer-text: MasterProject CI
          # embed-timestamp: ${{ steps.time.outputs.time }}
